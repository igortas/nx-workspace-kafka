name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18]
        pnpm-version: [7]
    steps:
      - name: Checkout [Pull Request]
        uses: actions/checkout@v3
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          token: ${{ secrets.NPM_TOKEN }}
          fetch-depth: 0

      - name: Checkout [Default Branch]
        uses: actions/checkout@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          token: ${{ secrets.NPM_TOKEN }}
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: setSHAs
        uses: nrwl/nx-set-shas@v3
        with:
          # main-branch-name: ${{ github.base_ref }}
          main-branch-name: main

      - name: Install PNPM
        uses: pnpm/action-setup@v2.2.2
        with:
          version: '${{ matrix.pnpm-version }}'

      - name: Use the node_modules cache if available [pnpm]
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-node-${{ steps.versions.outputs.node_version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ steps.versions.outputs.node_version }}-

      - name: Install dependencies
        run: pnpm install --prod --frozen-lockfile

      - run: |
          npx nx affected --target lint --parallel 3
          npx nx affected --target test --parallel 3 --ci --code-coverage
          npx nx affected --target build --parallel 3
